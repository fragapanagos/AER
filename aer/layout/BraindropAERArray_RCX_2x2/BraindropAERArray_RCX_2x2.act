// defines a 2x2 tile array
import "aer/aer/aer.act";
import "aer/lib/test.act";
import "aer/aer/layout/environment_BraindropAERArray.act";

export
defproc BraindropAERArray_RCX_2x2(aer::globals g;
    bool aext_pp, aext_pe; aer::c1of<4> aext_p;
    bool aerv__pp, aerv__pe; aer::c1of<4> aerv_p;
    bool nrn_req[16], nrn_ack[16];
    aer::a1of2 syn_spk[4]; aer::aMx1of4<4> _mem; bool _pchg)
{
    aer::brain_aer::TILE_AER tile_aer(g,,,,,,,
        nrn_req, nrn_ack,
        syn_spk, _mem, _pchg
    );

    aer::transmitter::NODE<2, 4> aext_node_2(g,,,,,,);
    aext_node_2.cp[0] = tile_aer.aext_pp;
    aext_node_2.ce[0] = tile_aer.aext_pe;
    aext_node_2.c[0] = tile_aer.aext_p;
    (; c : 1..3 : aext_node_2.cp[c] = g.GND;)
    (; c : 1..3 : (; d : 4 : aext_node_2.c[c].d[d] = g.GND;))
    aext_node_2.pp = aext_pp;
    aext_node_2.pe = aext_pe;
    aext_node_2.p = aext_p;

    aer::receiver::NODE<1, 4> aerv_node_1(g,,,,,,);
    aerv_node_1._cp[0] = tile_aer.aerv__pp;
    aerv_node_1._ce[0] = tile_aer.aerv__pe;
    aerv_node_1.c[0]  = tile_aer.aerv_p;
    (; c : 1..3 : aerv_node_1._ce[c] = g.Vdd;)
    aerv_node_1._pp = aerv__pp;
    aerv_node_1._pe = aerv__pe;
    aerv_node_1.p = aerv_p;
}
