// defines a 4x4 tile array
import "aer/aer/layout/environment_BraindropAERArray.act";
import "aer/aer/layout/BraindropAERArray_RCX_4x4/BraindropAERArray_RCX_4x4.act";

export defproc TOP(aer::globals g;
    aer::eMx1of2<8> aext_out;
    aer::eMx1of2<8> aerv_spk_in; aer::eMx1of2<14> aerv_mem_in
    )
{
    bool Vdd, GND, vpsub, vnsub;
    bool _sReset, _pReset, sReset, pReset;
    g.Vdd = Vdd;
    g.GND = GND;
    g.vpsub = vpsub;
    g.vnsub = vnsub;
    g._sReset = _sReset;
    g._pReset = _pReset;
    g.sReset = sReset;
    g.pReset = pReset;
    aer::test::RESET reset(
        g.Vdd, g.GND, g.vpsub, g.vnsub,
        g._sReset, g._pReset, g.sReset, g.pReset
    );

    pint M=4;
    pint NN=16;
    pint NSYN=4;
    pint NMEM=1;
    pint M_MEM=M+3;
    pint M_SPK=M;
    pint D=4;

    // aer environment
    AER_ENV<NN, NSYN, NMEM, M, M_MEM> aer_env(g,,,,,,,,,,,,
        aext_out, aerv_spk_in, aerv_mem_in);

    // tile
    BraindropAERArray_RCX_4x4 aer_4x4(g,
        aer_env.aext__pp, aer_env.aext_pe, aer_env.aext__p,
        aer_env.aerv__pp, aer_env.aerv__pe, aer_env.aerv_p,
        aer_env.nrn_req, aer_env.nrn_ack, aer_env.syn_spk,
        aer_env._mem[0], aer_env._pchg[0]
    );

}

TOP dut;
