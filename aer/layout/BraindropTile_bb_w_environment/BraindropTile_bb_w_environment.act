// defines a single tile
import "aer/aer/aer.act";
import "aer/aer/layout/blackbox_BraindropTile_Bias_Driver.act";
import "aer/aer/layout/blackbox_BraindropTileArray_1x1.act";

defproc TOP(aer::globals_w_analog ga) {
    bool Vdd, GND, vpsub, vnsub;
    bool gnda, vdda, vddp, pbulk;
    bool _sReset, _pReset, sReset, pReset;
    ga.Vdd = Vdd;
    ga.GND = GND;
    ga.vpsub = vpsub;
    ga.vnsub = vnsub;
    ga.gnda = gnda;
    ga.vdda = vdda;
    ga.vddp = vddp;
    ga.pbulk = pbulk;
    ga._sReset = _sReset;
    ga._pReset = _pReset;
    ga.sReset = sReset;
    ga.pReset = pReset;
    aer::globals g;
    aer::globals_to_globals_w_analog g_to_ga(g, ga);
    aer::test::RESET reset(
        g.Vdd, g.GND, g.vpsub, g.vnsub,
        g._sReset, g._pReset, g.sReset, g.pReset
    );

    BraindropTile_Bias_Driver bias_driver(
        ga.V_G, ga.V_IOFFSET, ga.V_LK_A, ga.V_LK_B, ga.V_PE_PD,
        ga.V_PE_PU, ga.V_R, ga.V_REF,
        ga.V_WDC, ga.V_WEXC, ga.V_WINH,
        ga.gnda, ga.vdda, ga.vddp, ga.pbulk, ga.vnsub
    );

    BraindropTileArray_1x1 tile;
    tile.Vdd = ga.Vdd;
    tile.GND = ga.GND;
    tile.pReset = ga.pReset;
    tile.__pReset = ga._pReset;
    tile.__sReset = ga._sReset;
    tile.ADC__OUT_00_1 = ga.ADC_OUT[0];
    tile.ADC__OUT_01_1 = ga.ADC_OUT[1];
    tile.vpsub = ga.vpsub;
    tile.vnsub = ga.vnsub;
    tile.V__REF = ga.V_REF;
    tile.V__R = ga.V_R;
    tile.V__G = ga.V_G;
    tile.V__PE__PD = ga.V_PE_PD;
    tile.V__PE__PU = ga.V_PE_PU;
    tile.V__WINH = ga.V_WINH;
    tile.V__WDC = ga.V_WDC;
    tile.V__WEXC = ga.V_WEXC;
    tile.V__LK__B = ga.V_LK_B;
    tile.V__LK__A = ga.V_LK_A;
    tile.V__IOFFSET = ga.V_IOFFSET;
    tile.vdda = ga.vdda;
    tile.vddp = ga.vddp;
    tile.gnda = ga.gnda;
    tile.pbulk = ga.pbulk;

    aer::test::SINK_SERIAL<4> sink;
    sink.g = g;
    sink.p = tile.aext__pp;
    sink.e = tile.aext_pe;
    sink.d.d[0] = tile.aext__p_d_00;
    sink.d.d[1] = tile.aext__p_d_01;
    sink.d.d[2] = tile.aext__p_d_02;
    sink.d.d[3] = tile.aext__p_d_03;

    tile.aerv__pp = ga.Vdd;
    tile.aerv_p_d_00 = ga.GND;
    tile.aerv_p_d_01 = ga.GND;
    tile.aerv_p_d_02 = ga.GND;
    tile.aerv_p_d_03 = ga.GND;
}

TOP dut;
