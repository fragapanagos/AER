// Spice the AEXT portion of the braindrop / brainstorm AER system
import "aer/aer/aer.act";
import "aer/lib/test.act";

namespace aer {

export defproc Wrapper(globals_np g_np;
    eMx1of4<2> spk_src; eMx1of4<5> mem_src;
    a1of2 syn_snk[4]; aMx1of4<4> mem_snk)
{
    globals g; bool Vdd, GND, vpsub, vnsub;
    test::COSIM_GLOBALS_RESET cosim_reset(g_np, g, Vdd, GND, vpsub, vnsub);

    pint M=2;
    pint NN=16;
    pint N_SYN=4;
    pint M_MEM=5;
    pint M_SPK=2;
    pint D=4;
    
    // tile
    aMx1of4<4> _mem_snk;
    brain_aer::TILE_AER<false> tile(
        g,,,,,,,,, syn_snk, _mem_snk,);
    (; nn : NN : tile.nrn_req[nn] = g.GND;)
    tile.aext_pe = g.GND;
    _mem_snk.a = mem_snk.a;
    
    prs<g.Vdd, g.GND | g.vpsub, g.vnsub> {
        (: m : M_MEM-1 :
            (: d : D :
                _mem_snk.m[m].d[d] => mem_snk.m[m].d[d]-
            )
        )
    }

    // interface
    brain_receiver::AERV_INT<M_SPK, M_MEM>
        a_int(g, spk_src, mem_src,,,);
    receiver::EDGE_INT<M, D> e_int(g,
        a_int.aerv__pp, tile.aerv__pp,
        a_int.aerv__pe, tile.aerv__pe,
        a_int.aerv_p, tile.aerv_p);
} // defproc Wrapper

} // namespace aer

aer::Wrapper dut;
