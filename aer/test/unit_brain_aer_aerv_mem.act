// unit test that the braindrop/brainstorm aer system can send packets to memory
import "aer/aer/aer.act";
import "aer/lib/test.act";
pint M=4;
pint M_AERV_SPK=M;
pint M_AERV_MEM=M+3;
pint N=4;
pint NN=256; // NN=N^M
pint N_SYN=NN/N;
pint N_MEM=NN/N/N;
aer::globals g;
bool Reset = g.sReset;

aer::test::NRN_ARR<NN> nrn(g,,);
aer::SINK_eMx1of4<M> aext_snk(g,);

aer::test::SOURCE_BRAIN_AERV<M, 1, 0, 2> aerv_spk_src(g,);

aer::eMx1of2<2*M_AERV_MEM> aerv_mem_src;
aer::eMx1of2_to_eMx1of4<2*M_AERV_MEM, M_AERV_MEM> aerv_mem_src_(g, aerv_mem_src,);

aer::test::SYNAPSE_ARR<N_SYN> syn(g,);
aer::test::MEM_ARR<4, N_MEM> mem(g,);

aer::eMx1of4<M_AERV_MEM-M+1> mem_dat[N_MEM];
(; nm : N_MEM :
    mem_dat[nm].e = mem._x[nm].e;
    prs {
        (: m : M :
            (: n : N :
                [after=0] mem._x[nm].m[m].n[n] => mem_dat[nm].m[m].n[n]-
            )
        )
    }
)

aer::BRAIN_AER<M, NN> aer(g, nrn.req, nrn.ack, aext_snk.d, 
                          aerv_spk_src.d, aerv_mem_src_.y, syn.spk, mem._x);
