// unit test that the braindrop/brainstorm aer system can send spikes to synapses
import "aer/aer/aer.act";
import "aer/lib/test.act";
pint M=4;
pint M_AERV_SPK=M;
pint M_AERV_MEM=M+3;
pint N=4;
pint NN=256; // NN=N^M
pint N_SYN=NN/N;
pint N_MEM=NN/N/N;

aer::globals_w_analog ga;
aer::globals g;
aer::globals_to_globals_w_analog g_to_ga(g, ga);
bool Reset = g.sReset;

aer::SINK_eMx1of4<M> aext_snk(g,);
aer::eMx1of2<2*M_AERV_SPK> aerv_spk_src;
aer::eMx1of2_to_eMx1of4<2*M_AERV_SPK, M_AERV_SPK> aerv_spk_src_(g, aerv_spk_src,);
aer::test::SOURCE_BRAIN_AERV<M_AERV_MEM, M_AERV_MEM-M+1, 2, 1>
    aerv_mem_src(g,);

aer::a1of2 syn_spk[N_SYN];
aer::e1of2 syn_dat[N_SYN];
(; m : N_SYN :
    syn_dat[m].m = syn_spk[m].m;
)
prs {
    (: m : N_SYN :
        [after=0] syn_spk[m].a => syn_dat[m].e-
    )
}

aer::BRAIN_AER<M, NN, false> aer(ga,,, aext_snk.d, 
                          aerv_spk_src_.y, aerv_mem_src.d, syn_spk,);
