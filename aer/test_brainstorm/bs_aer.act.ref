// Tests the braindrop / brainstorm AER system
import "aer/aer/bs_aer.act";
import "aer/lib/test.act";
import "aer/lib/compat_bs.act";
pint M=4;
pint p4M=256; // = 4^M
pint p2M=16; // = 2^M
pint M_AEXT_SPK_1of4=M;
pint M_AEXT_SPK_1of2=M_AEXT_SPK_1of4*2;
pint M_AERV_SPK_1of4=M;
pint M_AERV_MEM_1of4=M+3;
pint M_AERV_SPK_1of2=M_AERV_SPK_1of4*2;
pint M_AERV_MEM_1of2=M_AERV_MEM_1of4*2;
#SCRIPT pint tile_i[p4M/16];
#SCRIPT pint tile_j[p4M/16];

globals g_bs;
aer::globals g;
compat_bs::globals g_to_gbs(g, g_bs);

aer::SINK_eMx1of2<M_AEXT_SPK_1of2> aext_snk(g,);
aer::test::SOURCE_BRAIN_AERV<M, 1, 0, 2> aerv_spk_src(g,);
aer::test::SOURCE_BRAIN_AERV<M_AERV_MEM_1of4, M_AERV_MEM_1of4-M+1, 2, 1>
    aerv_mem_src(g,);

aer::eMx1of4_to_eMx1of2<M_AERV_SPK_1of4, M_AERV_SPK_1of2> aerv_spk_src_4to2(
    g, aerv_spk_src.d,);
aer::eMx1of4_to_eMx1of2<M_AERV_MEM_1of4, M_AERV_MEM_1of2> aerv_mem_src_4to2(
    g, aerv_mem_src.d,);

BS_AER<M*2, M, p4M, p2M, tile_i, tile_j, false> aer(g_bs,,,,,,,,,,);

BS_AER_INT<M*2, M> aer_int(g_bs,
    aer.aext_pp, aer.aext_pe, aer.aext_p, aext_snk.d,
    aer.aerv_pp, aer.aerv_pe, aer.aerv_p, aerv_spk_src_4to2.y, aerv_mem_src_4to2.y);
