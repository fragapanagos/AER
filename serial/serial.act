import aer/lib/globals.act";
import aer/lib/channel.act";

template <pint N>
defproc SOURCE (globals g; bool yi, yp; c1of<N> y) {
    bool u, _yp;
    (; n : N :
        spec {
            mk_exclhi(_yp, y.d[n])
        }
    )
    (; n : N :
        (; nn : N :
            spec {
                mk_exclhi(y.d[n], y.d[nn])
            }
        )
    )

    prs<g.Vdd, g.GND> {
        ~u -> _yp-
        yi & u -> _yp+

        ~g.sReset & ~_yp -> yp+
        g.sReset | _yp -> yp-

        yp & yi -> u+
        g.pReset | ~yp & ~yi -> u-

        (: n : N :
            u & yi -> y.d[n]+
            ~yi -> y.d[n]-
        )

    }
}

template <pint N>
defproc BUFFER (globals g; bool xp, xo, yi, yp; c1of<N> x, y) {
    prs<g.Vdd, g.GND> {
        xp => yp+
        yi => xo+
        (: n : N :
            x.d[n] => y.d[n]+
        )
    }
}

template <pint N>
defproc SINK (globals g; bool xp, xo; c1of<N> x) {
    c1of<N> _x;
    bool _xo;
    prs<g.Vdd, g.GND> {
        (: n : N :
            x.d[n] => _x.d[n]-
        )

        xp & (& : n : N : _x.d[n]) => _xo-

        _xo => xo-
    }
}
