import "globals.act";
import "channel.act";
import "arbiter.act";

export defproc wrapper(globals_np g_np; e1of<1> A[2])
{
    bool Vdd;
    bool GND;
    globals g;

    arbiter::_MUTEX p(g,,);
    g.Vdd = Vdd;
    g.GND = GND;
    prs <Vdd, GND> {
        g_np._sReset<20> => g.sReset-
        g_np._pReset<20> => g.pReset-
    }
    g._pReset = g_np._pReset;
    g._sReset = g_np._sReset;

    prs<Vdd, GND> {
        ~A[0].d[0]<12> -> p._i[0]+
        A[0].d[0]<9> -> p._i[0]-

        ~A[1].d[0]<12> -> p._i[1]+
        A[1].d[0]<9> -> p._i[1]-
    }
    A[0].e = p._o[0];
    A[1].e = p._o[1];
}

wrapper dut;
