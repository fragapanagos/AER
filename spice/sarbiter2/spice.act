import "globals.act";
import "channel.act";
import "arbiter.act";

export defproc wrapper(globals_np g_np; a1of<1> A, B)
{
    bool Vdd;
    bool GND;
    pint width=6;

    arbiter::n_arb_s::N_ARB<2, width> p;
    p.g.Vdd = Vdd;
    p.g.GND = GND;
    prs <Vdd, GND>
    {
        g_np._sReset<20> => p.g.sReset-
        g_np._pReset<20> => p.g.pReset-
    }
    p.g._pReset = g_np._pReset;
    p.g._sReset = g_np._sReset;
    p.i[0] = A.d[0];
    p.i[1] = B.d[0];
    p.o[0] = A.a;
    p.o[1] = B.a;
}

wrapper dut;
